grammar org.absmodel.AbsModel with org.eclipse.xtext.xbase.Xbase

generate absModel "http://www.absmodel.org/AbsModel"

AbsModel:
	moduleSection=AbsModuleSection
	importSection=AbsImportSection?
	declarations+=(InterfaceDeclaration | ClassDeclaration)*
	'{'
		(statements+=Statement';')*
	'}';

AbsModuleSection:
	'module' QualifiedName ';';

AbsImportSection:
	importDeclarations+=AbsImportDeclaration+;

AbsImportDeclaration:
	'import' (QualifiedName | QualifiedNameWithWildcard) ';';

InterfaceDeclaration:
	'interface' name=ValidID ('extends' QualifiedName QualifiedName*)? '{'
		(elements+=MethodSignature ';')*
	'}';

MethodSignature:
	type=JvmTypeReference name=ValidID '(' 
		(params+=FormalParam (',' params+=FormalParam)*)?   
	')'
;

ClassDeclaration:
	'class' name=ValidID ('implements' QualifiedName QualifiedName*)? '{'
		('{' 
			(elements+=SyncStatement';')*
		'}')?
		(fields+=Field';')*
		(operations+=Method)* 
	'}';
	
Field:
	QualifiedName name=ValidID
;

Method:
	MethodSignature '{'
		(element+=Statement';')*
		('return' exp=PureExpression ';')?
	'}'
;

FormalParam:
	param=FullJvmFormalParameter
;

Statement:
	AsyncStatement | SyncStatement | PureExpression
;

AsyncStatement:
	' '
;

PureExpression:
	' '
;

SyncStatement:
	' '
;
